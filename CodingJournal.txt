Valuables
- int: simply numbers. no decimal or anything complicated.
- decimal: decimal numbers.
- double: smalle decimals.
- float: smaller decimals.
- char: single characters like "A", "!".
- string: collection of characters.
- boolean: true or false.

=
- used when initialising the value.
- e.g. string text = "This is a text".

Console.Write();
- output without changing the line.

Console.WriteLine();
- output on a new line.
- string value (strings between "") or value name goes into brackets.

Console.ReadLine();
- Reads a input from the user. Works as a string value.

Convert.ToInt32();
- converts a value into int. 32 means 32 bits.

[ValueType].Parse();
- converts a value into whatever the value type specified.

+
- addition

-
- subtraction

/
- division

*
- multiplication

%
- modulus (leftover)

!
- not

==
- equal

!=
- not equal

>
- left is bigger than right

>=
- left is begger than or equal to right

&&
- and

||
- or

+=, -=, /=, *=
- left = left [+-/*] right

if()
- checks the condition inside the brackets.
- executes the code if the condition is met.

else
- sets the action for when condition in if statement weren't met.

switch(){case}
- a variable will be tested for equality against a list of values.

for(statement1; statement2; statement3)
- loop
- statement1 will be executed before the loop starts.
- statement2 is the condition for the loop.
- statement3 will be executed at the end of each run.

while()
- loop
- the statement inside bbrackets is the condition.

do{} while()
- while loop.
- executes the code at least once then check the condition.

[]
- putting this after valuable creates array.
- e.g. int[] intArray = new int[];





-----git hub-----
cd
- go to file

git clone
- clone repos

git add .
- adds everything(?)

git commit -m "(comment)"
- commits to the local repository

git push origin master
- commit to the remote repository
